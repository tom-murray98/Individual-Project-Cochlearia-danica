1. get genomes and concateate for synthetic reference:
		n=6 genome: Cochlearia excelsa
			/share/Yant_Group_Shared/000.refs/Cochlearia/Cochlearia_excelsa_LY_Lab_Final_2022/C_excelsa_V5_GENOME/C_excelsa_V5.fasta

		n=7 genome: Cochlearia groenlandica
			/share/Yant_Group_Shared/000.refs/Cochlearia/Groenlandica_Genome_From_Siri_transfer_51123_files_a621904b/cochlearia_groenlandica_18Oct2019_dfYNf.fasta

	to make your synthetic danica genome, simply concatenate these two:
		cat /share/Yant_Group_Shared/000.refs/Cochlearia/Cochlearia_excelsa_LY_Lab_Final_2022/C_excelsa_V5_GENOME/C_excelsa_V5.fasta /share/Yant_Group_Shared/000.refs/Cochlearia/Groenlandica_Genome_From_Siri_transfer_51123_files_a621904b/cochlearia_groenlandica_18Oct2019_dfYNf.fasta > Syn_danica.fasta



2. align short read plants to this, using ngs_pipe: https://github.com/mattheatley/ngs_pipe, a pipeline is built for Augusta by a previous postdoc and works smootly!

	ONLY RUN thourough having bam files: don't run gatk etc (stop after stage 4!)

	You'll run 'setup', and will have to put Syn_danica.fasta in the appropriate folder, etc.
	then copy folders of approraite individuasl into the '00.fastqs' folder 


  Individuals to run

		 (test run: 

			 danica
			  /gpfs01/home/mbzly/2022.Cochlearia.MS1/ngs_pipe/STORE_BACK/02.trimmed/DAR_1
			 
			 pyrenica (diploid n=6 pennine)
			  /gpfs01/home/mbzly/2022.Cochlearia.MS1/ngs_pipe/STORE_BACK/02.trimmed/NEN_003	)


	1. n=6 control: C.excelsa: 1 individual from the 'DIE' population
	2. n=7 control: C.groenlandica: 1 ind from the 'SVA' (Svalbard) population
		(these shoudl map overwhemingly to one subgenome or the other, obviously)
	3. one normal (assumed) autotetraploid: C.officinalis the 'ERS' population

	4. all the danicas: 
		JON
		DAR
		FDE
		FOR
		RYE
		SCO
		LWA
		CUM
		BRE_CD
			(if there's more than one in a pop align all from each pop so we get within-pop metrics)

	5. other weird stuff:
		
		ULR (barvarica)
		TAT (tatrae)
		FRE (anglica?)

		SPU (unknown hull polyploid: have cytology showing it's 6x but it's NOT danica!)
		SKF (unknown hull polyploid)
		TET (unknown hull polyploid)

		AAH	(unknown and we really want to know!)
		OSW	(unknown and we really want to know!)

	all is in in /gpfs01/home/mbztth/cochlearia_third/trimmed

		I will send a plain text file of:
			name to use	base name
			JON_001		H1_L5 

		then you just copy /gpfs01/home/mbztth/cochlearia_third/trimmed/H1_L5* JON_001 (a folder you make called the plant name in 01.trimmed)






ngs_pipe notes in addition to github and readme in git
################################################################################

(make big conda env with yaml at bottom of these notes!)
then:

	conda activate ngs_pipe_env_gatk4

	python pipe_ngs.py -setup -p /FULL_PATH_TO_YOUR_SHINY_NEW_WORKING_FOLDER/ -d ngs_pipe
		dump Syn_danica.fasta in 'ref.gen file'

	python pipe_ngs.py -index -e ngs_pipe_env_gatk4 -p /FULL_PATH_TO_YOUR_SHINY_NEW_WORKING_FOLDER/ -d ngs_pipe
		# won't need to combine: python pipe_ngs.py -stage 1 -e ngs_pipe_env_gatk4 -p /FULL_PATH_TO_YOUR_SHINY_NEW_WORKING_FOLDER/ -d ngs_pipe
		# won't need to trim: python pipe_ngs.py -stage 2 -e ngs_pipe_env_gatk4 -p /FULL_PATH_TO_YOUR_SHINY_NEW_WORKING_FOLDER/ -d ngs_pipe
	# will start from mapping
	python pipe_ngs.py -stage 3 -e ngs_pipe_env_gatk4 -p /FULL_PATH_TO_YOUR_SHINY_NEW_WORKING_FOLDER/ -d ngs_pipe  -wt 72:00:00 -nt 4 -me 48g 
	# python pipe_ngs.py -stage 3 -e ngs_pipe_env_gatk4 -p /gpfs01/home/mbxtm2/ -d ngs_pipe/  -wt 72:00:00 -nt 4 -me 48g 


then assess coverage with flagstats from samtools (ngs_pipe may run this already-i forget). 

You can also run this on the bams:
 samtools coverage -A -w 70 03.mapped/osw_1/osw_1.srtd.bam -r Cexcelsa_scaf_1
 	
 	to get stats- e.g.

           Cexcelsa_scaf_1 (52.33Mbp)
          >  84.78% |:::..... .....:::...:... . . :  . .:: .:   :  ... ..::.... ...: . ... | Number of reads: 14518835
          >  75.36% |::::::::::::::::::::::::::::.:. :::::::::  :.::::::::::::: :::::::::::|     (52550 filtered)
          >  65.94% |::::::::::::::::::::::::::::::: ::::::::::::::::::::::::::::::::::::::| Covered bases:   46.23Mbp
          >  56.52% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::| Percent covered: 88.34%
          >  47.10% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::| Mean coverage:   39x
          >  37.68% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::| Mean baseQ:      35.8
          >  28.26% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::| Mean mapQ:       37.4
          >  18.84% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::|
          >   9.42% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::| Histo bin width: 747.6Kbp
          >   0.00% |::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::| Histo max bin:   94.199%
                    1       7.48M     14.95M    22.43M    29.90M    37.38M    44.85M     52.33M

for first pass we'd want to get stats of coverage over one subgenome or the other. 





yml file: ngs_pipe_env_gatk4.yml:


	name: ngs_pipe_env_gatk4
	channels:
	  - pipeliner
	  - bioconda
	  - conda-forge
	  - defaults
	dependencies:
	  - _libgcc_mutex=0.1=main
	  - _openmp_mutex=4.5=1_gnu
	  - bwa=0.7.17=h5bf99c6_8
	  - bzip2=1.0.8=h7b6447c_0
	  - c-ares=1.17.1=h27cfd23_0
	  - ca-certificates=2017.08.26=h1d4fec5_0
	  - cairo=1.12.18=6
	  - certifi=2021.10.8=py37h06a4308_0
	  - curl=7.78.0=h1ccaba5_0
	  - fontconfig=2.11.1=6
	  - freetype=2.5.5=1
	  - gatk4=4.2.3.0=hdfd78af_1
	  - glib=2.43.0=1
	  - gsl=2.4=h14c3975_4
	  - harfbuzz=0.9.39=1
	  - htslib=1.13=h9093b5e_0
	  - icu=54.1=0
	  - jbig=2.1=hdba287a_0
	  - jpeg=8d=2
	  - krb5=1.19.2=hac12032_0
	  - ld_impl_linux-64=2.35.1=h7274673_9
	  - libcurl=7.78.0=h0b77cf5_0
	  - libdeflate=1.7=h27cfd23_5
	  - libedit=3.1.20210714=h7f8727e_0
	  - libev=4.33=h7f8727e_1
	  - libffi=3.3=he6710b0_2
	  - libgcc=7.2.0=h69d50b8_2
	  - libgcc-ng=9.3.0=h5101ec6_17
	  - libgomp=9.3.0=h5101ec6_17
	  - libiconv=1.15=h63c8f33_5
	  - libnghttp2=1.46.0=hce63b2e_0
	  - libpng=1.6.30=1
	  - libssh2=1.9.0=h1ba5d50_1
	  - libstdcxx-ng=9.3.0=hd4cf53a_17
	  - libtiff=4.0.6=2
	  - libxml2=2.9.4=0
	  - ncurses=6.2=he6710b0_1
	  - openjdk=8.0.121=1
	  - openssl=1.1.1l=h7f8727e_0
	  - pango=1.39.0=1
	  - pcre=8.45=h295c915_0
	  - perl=5.22.0.1=0
	  - picard=2.26.6=hdfd78af_0
	  - pip=21.2.2=py37h06a4308_0
	  - pixman=0.32.6=0
	  - python=3.7.11=h12debd9_0
	  - r-base=3.3.1=3
	  - readline=8.1=h27cfd23_0
	  - samtools=1.13=h8c37831_0
	  - setuptools=58.0.4=py37h06a4308_0
	  - sqlite=3.36.0=hc218d9a_0
	  - tk=8.6.11=h1ccaba5_0
	  - trimmomatic=0.39=hdfd78af_2
	  - vcftools=0.1.16=h9a82719_5
	  - wheel=0.37.0=pyhd3eb1b0_1
	  - xz=5.2.5=h7b6447c_0
	  - zlib=1.2.11=h470a237_3
	prefix: /gpfs01/home/mbzly/.conda/envs/ngs_pipe_env_gatk4